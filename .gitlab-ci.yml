stages:
  - build
  - test
  - release

build:
  stage: build
  script: sbt clean compile  
  tags:
    - build-in-docker
    - cs-eco-builder

test:
  stage: test
  script:
    - sbt test
  tags:
    - build-in-docker
    - cs-eco-builder

test-release:
  image: "$CI_REGISTRY_IMAGE/cs-eco-ci-test-builder:latest"
  stage: release
  variables:
    APP_DOCKER_TAG: "$CI_COMMIT_REF_SLUG"
    DOCKER_COMPOSE_FILE: "e2e/docker-compose.yml"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - sbt -Ddocker.tag=$CI_COMMIT_REF_SLUG docker
    - docker-compose --file=$DOCKER_COMPOSE_FILE up -d --force-recreate --build
    - docker-compose --file=$DOCKER_COMPOSE_FILE run newman run cs-kv-storage.postman_collection.json --reporters=cli
    - sbt -Ddocker.tag=$CI_COMMIT_REF_SLUG dockerPush
  after_script:
    - docker-compose --file=$DOCKER_COMPOSE_FILE down --volumes
  tags:
    - build-in-docker-with-compose
    - cs-eco-builder

release:
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - sbt dockerBuildAndPush
  only:
    - master
    - develop
  tags:
    - build-as-docker
    - cs-eco-builder
